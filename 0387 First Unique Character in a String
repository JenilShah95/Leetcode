""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public int firstUniqChar(String s) {
        if(s.length()==0){
            return -1;
        }
        HashMap<Character,Integer> map = new HashMap<>();
        for(char i:s.toCharArray()){
            if(map.containsKey(i)){
                map.put(i,map.get(i)+1);
                continue;
            }
            map.put(i,1);
            
        }
        for(int i=0;i<s.length();i++){
            char a=s.charAt(i);
            if(map.get(a)==1){
                return i;
            }
        }
        return -1;
    }
}

