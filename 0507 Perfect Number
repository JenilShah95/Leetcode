"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

We define the Perfect Number is a positive integer that is equal to the sum of all its positive divisors except itself.

Now, given an integer n, write a function that returns true when it is a perfect number and false when it is not.
Example:
Input: 28
Output: True
Explanation: 28 = 1 + 2 + 4 + 7 + 14

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public boolean checkPerfectNumber(int num) {
        if(num==0 || num==1){
            return false;
        }
        List<Integer> result= new ArrayList<>();
        int total=1;
        result=find_divisors(num);
        for(int number:result) {
            total+=number;
        }
        return total==num;
    }
    public List<Integer> find_divisors(int num){
        List<Integer> list= new ArrayList<>();
        int a=2;
        while(a<=(int)Math.sqrt(num)){
            if(num%a==0){
                list.add(a);
                list.add(num/a);
            }
            a++;
        }
        return list;
    }
}
