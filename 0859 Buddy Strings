""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given two strings A and B of lowercase letters, return true if and only if we can swap two letters in A so that the result equals B.

 

Example 1:

Input: A = "ab", B = "ba"
Output: true
Example 2:

Input: A = "ab", B = "ab"
Output: false
Example 3:

Input: A = "aa", B = "aa"
Output: true
Example 4:

Input: A = "aaaaaaabc", B = "aaaaaaacb"
Output: true
Example 5:

Input: A = "", B = "aa"
Output: false

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



class Solution {
    public boolean buddyStrings(String A, String B) {
        if(A.length() == 0 && B.length() == 0){
            return false;
        }    
        if(A.length() == 0 || B.length() == 0){
            return false;
        }
        if(A.length() != B.length()){
            return false;
        }
        if(A.equals(B)){
            HashSet<Character> set = new HashSet<>();
            for(char a:A.toCharArray()){
                set.add(a);
            }
            return set.size() < A.length();  
        }
        
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0;i<A.length();i++){
            if(A.charAt(i) != B.charAt(i)){
                list.add(i);
            }
        }
        return list.size() == 2 && A.charAt(list.get(0)) == B.charAt(list.get(1)) && A.charAt(list.get(1)) == B.charAt(list.get(0));
    }
}
