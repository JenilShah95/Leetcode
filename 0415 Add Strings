"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public String addStrings(String num1, String num2) {
        String lowest = num1.length()<num2.length() ? num1:num2;
        String highest = num1.length()<num2.length() ? num2:num1;
        int diff = highest.length() - lowest.length();
        StringBuilder sb = new StringBuilder();
        if(diff!=0){
            for(int i=0;i<diff;i++){
                sb.append("0");
            }
            sb.append(lowest);
            lowest = sb.toString();
            sb=new StringBuilder();                        
        }
        int carry = 0;
        for(int i=highest.length()-1;i>=0;i--){
            int sum = Integer.valueOf(String.valueOf(lowest.charAt(i))) + Integer.valueOf(String.valueOf(highest.charAt(i))) + carry;
            int val = sum%10;
            sb.append(Integer.toString(val));
            carry=sum/10;
        }
        if(carry==1){
            sb.append("1");
        }
        return sb.reverse().toString();
    }
}
