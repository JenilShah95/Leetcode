"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai).
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0).
Find two lines, which together with x-axis forms a container, such that the container contains the most water.
Example:

Input: [1,8,6,2,5,4,8,3,7]
Output: 49

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public int maxArea(int[] height) {
        int low=0;
        int high=height.length-1;
        int area=0;
        while(low<=high){
            if(height[low] < height[high]){
                area=Math.max(area,height[low] * (high-low));
                low++;
            }
            else{
                area=Math.max(area,height[high] * (high-low));
                high--;
            }
        }
        return area;
    }
}
