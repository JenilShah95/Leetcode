"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given a linked list, remove the n-th node from the end of list and return its head.

Example:

Given linked list: 1->2->3->4->5, and n = 2.

After removing the second node from the end, the linked list becomes 1->2->3->5.


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(n==0 || head==null){
            return head;
        }
        int size=0;
        
        ListNode current = head;
        
        while(current!=null){
            size+=1;
            current=current.next;
        }
        if(n==size){
            return head.next;
        }
        if(n>size){
            return head;
        }
        int count=1;
        ListNode curr = head;
        while(count < size-n){
            curr=curr.next;
            count+=1;
        }
        ListNode next=curr.next;
        curr.next=null;
        curr.next = next.next;
        return head;
    }
}
