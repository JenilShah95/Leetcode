""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given two arrays A and B of equal size, the advantage of A with respect to B is the number of indices i for which A[i] > B[i].

Return any permutation of A that maximizes its advantage with respect to B.

 

Example 1:

Input: A = [2,7,11,15], B = [1,10,4,11]
Output: [2,11,7,15]
Example 2:

Input: A = [12,24,8,32], B = [13,25,32,11]
Output: [24,32,8,12]

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public int[] advantageCount(int[] A, int[] B) {
        int[] a = A.clone();
        int[] b= B.clone();
        Arrays.sort(a);
        Arrays.sort(b);
        int[] result = new int[A.length];
        HashMap<Integer,LinkedList<Integer>> map = new HashMap<>();
        for(int i : B){
            map.put(i,new LinkedList());
        }
        
        Queue<Integer> queue = new LinkedList();
        
        int j=0;
        for(int i : a){
            if(i > b[j]){
                map.get(b[j++]).add(i);
            }
            else{
                queue.add(i);
            }
        }
        
        for(int i=0;i<B.length;++i){
            if(map.get(B[i]).size()>0){
                result[i]=map.get(B[i]).pop();
            }
            else{
                result[i]=queue.poll();
            }
        }
        return result;
    }
}
