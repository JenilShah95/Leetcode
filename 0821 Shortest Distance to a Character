"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.

Example 1:

Input: S = "loveleetcode", C = 'e'
Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public int[] shortestToChar(String S, char C) {
        int[] n = new int[S.length()];
        int c = -1;
        int notc=0;
        for(int i=0;i<S.length();i++){
            if(S.charAt(i)==C){
                c=i;
                n[i]=0;
                while(notc<=i){
                    n[notc]=Math.min(n[notc],i-notc);
                    notc++;
                }
            }
            else{
                n[i] =  c != -1 ? i-c : Integer.MAX_VALUE;
            }
        }
        return n;
    }
}


