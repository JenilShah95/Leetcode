"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given a List of words, return the words that can be typed using letters of alphabet on only one row's of American keyboard.


Example 1:
Input: ["Hello", "Alaska", "Dad", "Peace"]
Output: ["Alaska", "Dad"]

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public String[] findWords(String[] words) {
        String[] S = {"qwertyuiop","asdfghjkl","zxcvbnm"};
        List<String> word = new ArrayList<String>();
        for(int i=0;i<words.length;i++){
            int p=Integer.MIN_VALUE;
            int j=0;
            for(char ch : words[i].toCharArray()){
                if(S[0].contains(String.valueOf(ch).toLowerCase())){
                    j=0;
                }
                if(S[1].contains(String.valueOf(ch).toLowerCase())){
                    j=1;   
                }
                if(S[2].contains(String.valueOf(ch).toLowerCase())){
                    j=2;
                }
                if(p==Integer.MIN_VALUE){
                    p=j;
                    continue;
                }
                if(p!=Integer.MIN_VALUE){
                    if(p!=j){
                        break;
                    }
                }
            }
            if(p==j){
                word.add(words[i]);
            }
        }
        String [] Words = word.toArray(new String[word.size()]);
        return Words;
    }
}
