"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Given an arbitrary ransom note string and another string containing letters from all the magazines,
write a function that will return true if the ransom note can be constructed from the magazines ;
otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Note:
You may assume that both strings contain only lowercase letters.

canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        if(magazine.length() < ransomNote.length()){
            return false;
        }
        if(magazine.length() == ransomNote.length()){
            if(magazine.equals(ransomNote)){
                return true;
            }
            return false;
        }
        int[] n = new int[26];
        Arrays.fill(n,0);
        for(char c : magazine.toCharArray()){
            n[c-'a']++;
        }
        for(char c : ransomNote.toCharArray()){
            n[c-'a']--;
            if(n[c-'a'] < 0){
                return false;
            }
        }
        return true;
    }
}
